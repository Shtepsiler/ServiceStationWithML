# Use the base ASP.NET Core image for the runtime environment
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
USER app
WORKDIR /app
EXPOSE 8080
EXPOSE 8081

# Use the SDK image for building
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src

# Copy the project files and restore dependencies
COPY ["PARTS.API/PARTS.API.csproj", "PARTS.API/"]
COPY ["PARTS.BLL/PARTS.BLL.csproj", "PARTS.BLL/"]
COPY ["PARTS.DAL/PARTS.DAL.csproj", "PARTS.DAL/"]
RUN dotnet restore "./PARTS.API/./PARTS.API.csproj"

# Copy the entire source code and build the application
COPY . .
WORKDIR "/src/PARTS.API"
RUN dotnet build "./PARTS.API.csproj" -c $BUILD_CONFIGURATION -o /app/build

# Publish the application
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./PARTS.API.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# Use the base image for the final runtime environment
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .

# Copy the certificate files into the image
COPY ["aspnetapp.pfx", "/https/aspnetapp.pfx"]

# Set the environment variables for HTTPS
ENV ASPNETCORE_URLS=https://+:443
ENV ASPNETCORE_Kestrel__Certificates__Default__Password="hecysgsplf"
ENV ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx

# Expose the HTTPS port
EXPOSE 443

# Define the entry point for the container
ENTRYPOINT ["dotnet", "PARTS.API.dll"]
